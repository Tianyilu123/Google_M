class Solution {
    public int[][] candyCrush(int[][] board) {
        int rows = board.length, cols = board[0].length;
        boolean found = true;
        while(found) {
            found = false;
            for(int i=0; i<rows; i++) {
                for(int j=0; j<cols; j++) {
                    int val = Math.abs(board[i][j]);
                    if(val == 0) continue;
                    if(j<cols-2 && Math.abs(board[i][j+1]) == val &&
                                            Math.abs(board[i][j+2]) == val) {
                        found = true;
                        int ind = j;
                        while(ind<cols && Math.abs(board[i][ind])==val)
                            board[i][ind++] = -val;
                    }
                    if(i<rows-2 && Math.abs(board[i+1][j]) == val && 
                       Math.abs(board[i+2][j]) == val) {
                        found = true;
                        int ind = i;
                        while(ind < rows && Math.abs(board[ind][j]) == val)
                            board[ind++][j] = -val;
                    }
                }
            }
            // traverse whole matrix is over;
            
            if(found) {
                for(int j=0; j<cols; j++) {
                    int storeInd = rows-1;
                    for(int i=rows-1; i>=0; i--) {
                        if(board[i][j] > 0){
                            board[storeInd--][j] = board[i][j];
                        }
                    }
                    for(int k = storeInd; k>=0; k--)
                        board[k][j] = 0;
                }
            }
            // cancel candy process is over
            
        }
        
        
        return board;
    }
}
