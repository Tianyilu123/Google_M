class Solution {
    public int[] assignBikes(int[][] workers, int[][] bikes) {
        int lenw = workers.length;
        int lenb = bikes.length;
        int[] res = new int[lenw];
        boolean[] worker = new boolean[lenw];
        boolean[] bike = new boolean[lenb];
        List<int[]>[] list = new List[2001];
        
        for(int i=0; i<lenw; i++) {
            for(int j=0; j<lenb; j++) {
                int dist = dist(workers[i], bikes[j]);
                
                if(list[dist] == null) {
                    list[dist] = new ArrayList<>();
                }
                
                list[dist].add(new int[]{i,j});
            }
        }
        
        for(int i=0; i<2001; i++) {
            if(list[i] == null) continue;
            int size = list[i].size();
            for(int j=0; j<size; j++) {
                int w = list[i].get(j)[0];
                int b = list[i].get(j)[1];
                
                if(!worker[w] && !bike[b]) {
                    res[w] = b;
                    worker[w] = true;
                    bike[b] = true;
                }
            }
        }
        return res;
    }
    
    private int dist(int[] w, int[] b) {
        return Math.abs(w[0]-b[0]) + Math.abs(w[1]-b[1]);
    }
}
