class Solution {
    public boolean validSquare(int[] p1, int[] p2, int[] p3, int[] p4) {
        HashSet<Long> set = new HashSet<>();
        long[] lens = {getLen(p1, p2), getLen(p2,p3), getLen(p3,p4), getLen(p4,p1),
                                        getLen(p1,p3), getLen(p2,p4)};
        for(long len : lens) {
            if(len == 0) return false;
            set.add(len);
        }
        return set.size() == 2;
    }
    
    private long getLen(int[] p1, int[] p2) {
        return (long)Math.pow(p1[0]-p2[0],2) + (long)Math.pow(p1[1]-p2[1],2);
    }
}


Time complexity: O(1)
Space complexity: O(1)
