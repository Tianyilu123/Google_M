class Solution {
    public List<String> generateParenthesis(int n) {
        List<String> res = new ArrayList<>();
        if(n == 0) return res;
        helper(res, new StringBuilder(), n, 0, 0);
        return res;
    }
    
    private void helper(List<String> res, StringBuilder sb, int n, int left, int right) {
        if(left == n && right == n) {
            res.add(sb.toString());
            return;
        }
        if(right > left || left > n || right > n ) return;
        
        sb.append('(');
        helper(res, sb, n, left+1, right);
        sb.setLength(sb.length()-1);
        
        sb.append(')');
        helper(res, sb, n, left, right+1);
        sb.setLength(sb.length()-1);
    }
}
