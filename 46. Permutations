class Solution {
    public List<List<Integer>> permute(int[] nums) {
        List<List<Integer>> res = new ArrayList<>();
        if(nums == null || nums.length == 0) return res;
        helper(res, new ArrayList<Integer>(), nums, new boolean[nums.length]);
        return res;
    }
    
    private void helper(List<List<Integer>> res, List<Integer> tmp, int[] nums, boolean[] visited) {
        
        if(tmp.size() == nums.length) {
            res.add(new ArrayList<>(tmp));
            return;
        }
        
        for(int i=0; i<nums.length; i++) {
            if(visited[i] == true) continue;
            tmp.add(nums[i]);
            visited[i] = true;
            helper(res, tmp, nums, visited);
            visited[i] = false;
            tmp.remove(tmp.size()-1);
        }
    }
}
